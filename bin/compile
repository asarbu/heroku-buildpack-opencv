#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# parse params
BUILD_DIR=$1
CACHE_DIR=$2

OPENCV_PACKAGE="https://sourceforge.net/projects/opencvlibrary/files/opencv-unix/2.4.11/opencv-2.4.11.zip/download"
# "http://downloads.sourceforge.net/project/opencvlibrary/opencv-unix/2.4.11/opencv-2.4.11.zip"
OPENCV_PACKAGE_ARCHIVE="opencv-2.4.11.zip"
OPENCV_FOLDER="opencv-2.4.11"
OPENCV_PACKAGE_ETAG=$(curl -s --head "$OPENCV_PACKAGE" | grep -Ei '^etag' | sed -r 's/^etag|[^a-zA-Z0-9]+//gi')
VENDORED_OPENCV="/app/vendor/opencv"
# VENDORED_OPENCV="/opencv"
OPENCV_CACHE="$CACHE_DIR/opencv_$OPENCV_PACKAGE_ETAG";

if [ -d "$OPENCV_CACHE" ]; then
  echo "-----> Reusing cached OpenCV ($OPENCV_PACKAGE_ETAG)"
  cp -a $OPENCV_CACHE $VENDORED_OPENCV
else
  echo "-----> Fetching and caching OpenCV ($OPENCV_PACKAGE_ETAG)"
  # mkdir -p $VENDORED_OPENCV
  echo $PATH
  # wget -O $OPENCV_PACKAGE_ARCHIVE $OPENCV_PACKAGE
  # unzip $OPENCV_PACKAGE_ARCHIVE

  # mv $OPENCV_FOLDER $VENDORED_OPENCV
  # cd "$VENDORED_OPENCV"
  # mkdir build
  # cd build
  # echo "-----> running cmake to create the Makefile"
  # cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=$(python3 -c "import sys; print(sys.prefix)") -DWITH_QT=ON -DWITH_OPENGL=ON -DWITH_VTK=ON -DWITH_TBB=ON -DWITH_GDAL=ON -DWITH_XINE=ON -DBUILD_EXAMPLES=ON -D BUILD_opencv_java=OFF BUILD_opencv_test_java=OFF  ..
  # make -j2
  # mkdir -p $CACHE_DIR
  # cp -a $VENDORED_OPENCV $OPENCV_CACHE
fi

# vendor
echo "-----> Vendoring OpenCV shared objects into slug"
VENDORED_SO="$BUILD_DIR/vendor/opencv/lib"
mkdir -p $VENDORED_SO
cp -a "$VENDORED_OPENCV/install/lib/" $VENDORED_SO

# runtime
mkdir -p "$BUILD_DIR/.profile.d"
echo "export LD_LIBRARY_PATH=\"/app/vendor/opencv/lib:\$LD_LIBRARY_PATH\"" > $BUILD_DIR/.profile.d/opencv.sh
echo "export PKG_CONFIG_PATH=\"/app/vendor/opencv/lib/pkgconfig:\$PKG_CONFIG_PATH\"" >> $BUILD_DIR/.profile.d/opencv.sh

